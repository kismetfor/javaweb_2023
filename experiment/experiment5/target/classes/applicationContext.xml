<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/util
       http://www.springframework.org/schema/util/spring-util.xsd">

    <!-- 老师的视频 -->
    <!--
    <bean id="User" class="cwnu.comp.bean.User">
        <property name="name" value="李明" />
    </bean>
    -->

    <!-- 根据老师视频的实践 -->
    <bean id="user" class="com.example.bean.User">
        <property name="name" value="202113820218刘涛" />
    </bean>

    <!-- 设值注入 -->
    <!--
    可以在不修改类的前提下更改属性值，允许对单个属性进行灵活设置。
    适用于有大量可选属性的Bean，或者需要动态更改属性值的情况。
    -->
    <bean id="bySetter" class="com.example.bean.Corp">
        <property name="staff">
            <util:list>
                <bean class="com.example.bean.Employee">
                    <property name="name" value="setter001"/>
                    <property name="workNumber" value="001"/>
                </bean>
                <bean class="com.example.bean.Employee">
                    <property name="name" value="setter002"/>
                    <property name="workNumber" value="002"/>
                </bean>
            </util:list>
        </property>
        <property name="corpName" value="设值注入公司"/>
    </bean>

    <!-- 构造注入 -->
    <!--
    一旦Bean被实例化，就不可更改，构造函数的参数值在Bean创建时已经确定。
    适用于依赖项较少且在Bean创建时就已经确定的情况
    -->
    <bean id="byConstructor" class="com.example.bean.Corp">
        <constructor-arg>
            <list>
                <bean class="com.example.bean.Employee">
                    <property name="name" value="Constructor001"/>
                    <property name="workNumber" value="001"/>
                </bean>
                <bean class="com.example.bean.Employee">
                    <property name="name" value="Constructor002"/>
                    <property name="workNumber" value="002"/>
                </bean>
            </list>
        </constructor-arg>
        <constructor-arg value="构造注入公司"/>
    </bean>

    <!-- 实验六 -->
    <!-- 定义 Corp bean -->
<!--    <bean id="corp" class="com.example.bean.Corp"/>-->
    <bean id="corp" class="com.example.bean.Corp">
        <property name="staff">
            <util:list>
                <bean class="com.example.bean.Employee">
                    <property name="name" value="章鱼小"/>
                    <property name="workNumber" value="001"/>
                </bean>
                <bean class="com.example.bean.Employee">
                    <property name="name" value="章鱼大"/>

                    <property name="workNumber" value="002"/>
                </bean>
            </util:list>
        </property>
        <property name="corpName" value="618有限公司"/>
    </bean>
    <!-- 定义Aspect -->
    <bean id="myAspect" class="com.example.bean.MyAspect"/>

    <!-- 配置AOP -->
    <aop:config>
        <!-- 声明切面 -->
        <aop:aspect id="aspect" ref="myAspect">
            <!-- 配置切入点和通知 -->
            <aop:pointcut id="addWorkerPointcut" expression="execution(void com.example.bean.Corp.add_worker(*))"/>
            <aop:before method="beforeAdvice" pointcut-ref="addWorkerPointcut"/>
            <aop:around method="aroundAdvice" pointcut-ref="addWorkerPointcut"/>
        </aop:aspect>
    </aop:config>

</beans>
